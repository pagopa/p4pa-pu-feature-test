trigger:
  branches:
    include:
      - main

variables:
  # Python version: 3.x
  pythonVersion: '3.x'
  # Folder name of this sub-repository
  working-dir: '.'
  # Project root folder
  projectRoot: $(System.DefaultWorkingDirectory)/$(working-dir)
  selfHostedAgentPool: 'p4pa-dev-linux-app'

pool:
  vmImage: 'ubuntu-22.04'

parameters:
  - name: env
    displayName: Target Environment
    type: string
    default: dev
    values:
      - dev

  - name: tag
    displayName: Target tests tag (use unquoted "all" to run every un-skipped test)
    type: string
    default: 'all'
    values:
      - all
      - admin_globale
      - admin_ente
      - operatore
      - enti
      - inserimento
      - modifica
      - logo

stages:
  - stage: Feature_tests
    dependsOn: [ ]
    pool:
      name: $(selfHostedAgentPool)
    jobs:
      - job: "Run_all_feature_tests"
        condition: and(succeeded(), or(eq('${{ parameters.tag }}', ''), eq('${{ parameters.tag }}', 'all')))
        strategy:
          maxParallel: 3
          matrix:
            gestione enti:
              current_tag: 'enti'
            gestione tipi dovuti:
              current_tag: 'tipiDovuti'
            gestione dovuti:
              current_tag: 'dovuti'
            gestione flussi:
              current_tag: 'flussi'
        steps:
          - checkout: self
          - script: |
              python3 --version
              pip3 --version
            displayName: "Display Python version"
          - script: |
              python3 --version
              python3 -m pip install --user pipenv
              python3 -m pipenv sync
            displayName: "Install requirements"
          - task: DownloadSecureFile@1
            name: pu_feature_secrets
            displayName: 'Download PU secrets'
            inputs:
              secureFile: 'pu_feature_secrets.yaml'
          - script: |
              python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave" --tags $TAGS --tags "~skip"
            displayName: 'Run tests with Behave'
            env:
              PU_SECRETS_PATH: $(pu_feature_secrets.secureFilePath)
              PU_TARGET_ENV: ${{ parameters.env }}
              TAGS: '$(current_tag)'
            continueOnError: true
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'tests/reports/behave/*.xml'
              searchFolder: $(Build.SourcesDirectory)
              failTaskOnFailedTests: true
            continueOnError: true
      - job: "Run_feature_tests_by_tag"
        condition: and(succeeded(), and( not(eq('${{ parameters.tag }}', '')), not(eq('${{ parameters.tag }}', 'all'))))
        steps:
          - checkout: self
          - script: |
              python3 --version
              pip3 --version
            displayName: "Display Python version"
          - script: |
              python3 --version
              python3 -m pip install --user pipenv
              python3 -m pipenv sync
            displayName: "Install requirements"
          - task: DownloadSecureFile@1
            name: pu_feature_secrets
            displayName: 'Download PU secrets'
            inputs:
              secureFile: 'pu_feature_secrets.yaml'
          - script: |
              python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave" --tags "${{ parameters.tag }}"
            displayName: 'Run tests with Behave'
            env:
              PU_SECRETS_PATH: $(pu_feature_secrets.secureFilePath)
              PU_TARGET_ENV: ${{ parameters.env }}
            continueOnError: true
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'tests/reports/behave/*.xml'
              searchFolder: $(Build.SourcesDirectory)
              failTaskOnFailedTests: true
            continueOnError: true
